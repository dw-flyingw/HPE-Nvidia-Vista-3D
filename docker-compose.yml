version: '3.8'

services:
  # Main Streamlit Application
  vista3d-app:
    build: .
    container_name: hpe-nvidia-vista3d-app
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_THEME_BASE=dark
      - IMAGE_SERVER=http://image-server:8888
      - EXTERNAL_IMAGE_SERVER=http://localhost:8888
      - OUTPUT_FOLDER=/app/output
      - DICOM_FOLDER=/app/dicom
      - VISTA3D_SERVER=http://host.docker.internal:8000
      - DOCKER_CONTAINER=true
      # OpenGL headless rendering support
      - DISPLAY=:99
      - LIBGL_ALWAYS_SOFTWARE=1
      - MESA_GL_VERSION_OVERRIDE=3.3
      - MESA_GLSL_VERSION_OVERRIDE=330
    volumes:
      - ${OUTPUT_FOLDER}:/app/output
      - ${DICOM_FOLDER}:/app/dicom
      - ./.env:/app/.env
    networks:
      - local-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    depends_on:
      - image-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Local Image Server
  image-server:
    build: .
    container_name: vista3d-image-server
    ports:
      - "8888:8888"
    command: ["uv", "run", "python", "utils/image_server.py"]
    environment:
      - VISTA3D_SERVER=http://host.docker.internal:8000
      - OUTPUT_FOLDER=/app/output
      - DICOM_FOLDER=/app/dicom
      - DOCKER_CONTAINER=true
    volumes:
      - ${OUTPUT_FOLDER}:/app/output
      - ${DICOM_FOLDER}:/app/dicom
      - ./.env:/app/.env
    networks:
      - local-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Optional: Local Vista3D Server (for testing/development)
  vista3d-server:
    image: nvcr.io/nim/nvidia/vista3d:1.0.0
    container_name: vista3d-server-local
    ports:
      - "8000:8000"
    environment:
      # NVIDIA NGC Configuration
      - NGC_API_KEY=${NGC_API_KEY}
      - NGC_ORG_ID=${NGC_ORG_ID}
      - LOCAL_NIM_CACHE=/workspace/.cache/nim
      
      # Server Configuration - Use host.docker.internal for Vista3D to access host services
      - IMAGE_SERVER=http://host.docker.internal:8888
      - VISTA3D_SERVER=http://localhost:8000
      
      # Vista-3D Configuration
      - IGNORE_SSL_ERRORS=True
      - IMAGE_URI_ALLOW_REDIRECTS=True
      - IMAGE_URI_HTTPS_ONLY=False
      
      # File Access Configuration - Allow any image server
      - ALLOW_LOCAL_FILES=True
      - ENABLE_CONTAINER_PATHS=True
      - ENABLE_FILE_ACCESS=True
      - ALLOW_ABSOLUTE_PATHS=True
      - ALLOW_RELATIVE_PATHS=True
      - ALLOW_FILE_PROTOCOL=True
      - ALLOW_LOCAL_PATHS=True
      - DISABLE_URL_VALIDATION=True
      - ALLOW_ABSOLUTE_FILE_PATHS=True
      - ALLOW_RELATIVE_FILE_PATHS=True
      - FILE_ACCESS_MODE=local
      - LOCAL_FILE_ACCESS=True
      
      # Network Access Configuration - Allow any image server
      - ALLOW_ANY_IMAGE_SERVER_HOST=True
      - ALLOW_EXTERNAL_NETWORK_ACCESS=True
      - DISABLE_HOST_VALIDATION=True
      - ALLOW_ANY_IP_ACCESS=True
      - DISABLE_DOMAIN_WHITELIST=True
      - ALLOW_HTTP_ACCESS=True
      - ALLOW_HTTPS_ACCESS=True
      
      # Additional Network Access Configuration
      - ALLOW_REMOTE_ACCESS=True
      - ALLOW_CROSS_ORIGIN=True
      - DISABLE_CORS=True
      - ALLOW_ANY_ORIGIN=True
      - ALLOW_ANY_HOST=True
      - DISABLE_ORIGIN_VALIDATION=True
      - ALLOW_WILDCARD_HOSTS=True
      - DISABLE_IP_VALIDATION=True
      - ALLOW_PRIVATE_IPS=True
      - ALLOW_PUBLIC_IPS=True
      - ALLOW_LOCALHOST=True
      - ALLOW_LOOPBACK=True
      - DISABLE_NETWORK_RESTRICTIONS=True
      - ENABLE_EXTERNAL_ACCESS=True
      - ALLOW_IMAGE_SERVER_ACCESS=True
      - DISABLE_IMAGE_SERVER_VALIDATION=True
      
      # CORS and Headers Configuration
      - CORS_ALLOW_ORIGINS=*
      - CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_ALLOW_HEADERS=*
      - CORS_ALLOW_CREDENTIALS=True
      - CORS_EXPOSE_HEADERS=*
      - CORS_MAX_AGE=3600
      - DISABLE_CORS_CHECKS=True
      - ALLOW_ALL_ORIGINS=True
      - ALLOW_ALL_METHODS=True
      - ALLOW_ALL_HEADERS=True
      
      # Vista3D Specific Configuration for External Access
      - VISTA3D_ALLOW_EXTERNAL_IMAGES=True
      - VISTA3D_DISABLE_IMAGE_VALIDATION=True
      - VISTA3D_ALLOW_ANY_URL=True
      - VISTA3D_DISABLE_URL_VALIDATION=True
      - VISTA3D_ALLOW_REMOTE_FILES=True
      - VISTA3D_DISABLE_FILE_VALIDATION=True
      - VISTA3D_ENABLE_NETWORK_ACCESS=True
      - VISTA3D_ALLOW_HTTP_DOWNLOADS=True
      - VISTA3D_ALLOW_HTTPS_DOWNLOADS=True
      - VISTA3D_DISABLE_SSL_VERIFICATION=True
      - VISTA3D_ALLOW_INSECURE_CONNECTIONS=True
      - VISTA3D_TIMEOUT=300
      - VISTA3D_MAX_RETRIES=3
      
      # Workspace Configuration
      - WORKSPACE_IMAGES_PATH=/workspace/output/nifti
      - WORKSPACE_OUTPUTS_PATH=/workspace/output
      - WORKSPACE_ROOT=/workspace
      
      # CUDA Configuration
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=0
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_LAUNCH_BLOCKING=1
      - TORCH_USE_CUDA_DSA=1
      
      # Domain Whitelist (comprehensive permissive list)
      - DOMAIN_WHITELIST=["http://image-server:8888","image-server","image-server:8888","http://image-server","http://image-server:8888","https://image-server","https://image-server:8888","http://host.docker.internal:8888","host.docker.internal","host.docker.internal:8888","http://host.docker.internal","https://host.docker.internal","https://host.docker.internal:8888",".*","http://.*","https://.*","http://.*:.*","https://.*:.*","file:///.*","localhost","127\\.0\\.0\\.1","0\\.0\\.0\\.0","::1","10\\..*","172\\..*","192\\.168\\..*","/workspace/output/nifti/.*"]
      
      # Supported Image Extensions
      - SUPPORTED_IMAGE_EXT=[".nrrd",".nii",".nii.gz",".dcm"]
    volumes:
      - ${OUTPUT_FOLDER:-./output}:/workspace/output
    networks:
      - local-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    profiles:
      - local-vista3d
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

networks:
  local-network:
    driver: bridge
  # External network for remote Vista3D server connectivity
  external-network:
    external: true
    name: vista3d-external

volumes:
  output-data:
  dicom-data:
