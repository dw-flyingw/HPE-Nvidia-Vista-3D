{{- if .Values.sampleData.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "vista3d.fullname" . }}-sample-data-init
  labels:
    {{- include "vista3d.labels" . | nindent 4 }}
    app.kubernetes.io/component: sample-data-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "vista3d.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: sample-data-init
    spec:
      restartPolicy: Never
      containers:
        - name: sample-data-init
          image: alpine:latest
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Starting sample data installation..."
              
              # Install required tools
              apk add --no-cache curl tar
              
              # Create directories
              mkdir -p /data/dicom /data/output /tmp/sample
              
              # Download sample data
              echo "Downloading sample data from {{ .Values.sampleData.url }}..."
              curl -L -o /tmp/sample_data.tgz "{{ .Values.sampleData.url }}"
              
              # Extract sample data
              echo "Extracting sample data..."
              cd /tmp/sample
              tar -xzf /tmp/sample_data.tgz
              
              # Move DICOM files
              {{- if .Values.sampleData.extractToDicom }}
              if [ -d "sample_data/dicom" ]; then
                echo "Installing DICOM files..."
                cp -r sample_data/dicom/* /data/dicom/
                echo "DICOM files installed successfully"
              fi
              {{- end }}
              
              # Move output files
              {{- if .Values.sampleData.extractToOutput }}
              if [ -d "sample_data/output" ]; then
                echo "Installing output files..."
                cp -r sample_data/output/* /data/output/
                echo "Output files installed successfully"
              fi
              {{- end }}
              
              # Clean up
              rm -rf /tmp/sample /tmp/sample_data.tgz
              
              echo "Sample data installation completed successfully!"
          volumeMounts:
            - name: dicom-data
              mountPath: /data/dicom
            - name: output-data
              mountPath: /data/output
      volumes:
        - name: dicom-data
          persistentVolumeClaim:
            claimName: {{ include "vista3d.fullname" . }}-dicom-pvc
        - name: output-data
          persistentVolumeClaim:
            claimName: {{ include "vista3d.fullname" . }}-output-pvc
{{- end }}
